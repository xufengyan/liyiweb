<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kesun.dao.liyi.Iyh_Collect">
    <resultMap id="BaseResultMap" type="kesun.entity.liyi.yh_collect">
        <result column="id" property="id"/>

        <result column="s_id" property="o_id"/>
        <result column="u_id" property="u_id"/>

    </resultMap>
    <sql id="Base_Column_List">
id,s_id,u_id
</sql>
    <sql id="colums">
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="s_id != null">
                s_id,
            </if>

            <if test="u_id != null">
                u_id,
            </if>


        </trim>
    </sql>

    <sql id="columsValue">
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="s_id != null">
                #{s_id},
            </if>

            <if test="u_id != null">
                #{u_id},
            </if>


        </trim>
    </sql>

    <sql id="columsItemsValue">
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                i#{item.id},
            </if>
            <if test="s_id != null">
                #{item.s_id},
            </if>

            <if test="u_id != null">
                #{item.u_id},
            </if>

        </trim>
    </sql>


    <!--单个对象新增-->
    <insert id="save" parameterType="kesun.entity.liyi.yh_refund">
        insert into i_collect(
        <include refid="colums"/>
        ) values (
        <include refid="columsValue"/>)
    </insert>


    <!--批量新增-->
    <insert id="batchSave" parameterType="kesun.entity.educationbaseinfo.College">
        insert into educationbaseinfo_college (
        <include refid="colums"/>
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            <include refid="columsItemsValue"/>
            );
        </foreach>
    </insert>
    <!--单个对象更新-->
    <update id="update" parameterType="kesun.entity.liyi.yh_collect">
        update i_refund set
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                id=#{id},
            </if>
            <if test="s_id != null">
                s_id=#{s_id},
            </if>

            <if test="u_id != null">
                u_id=#{u_id},
            </if>


        </trim>
        where id=#{id,jdbcType=VARCHAR}
    </update>
    <!--对象批量更新-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update educationbase_college set
            <trim suffix="" suffixOverrides=",">
                <if test="id != null">
                    id=#{item.id},
                </if>
                <if test="oldId != null">
                    oldId=#{item.oldId},
                </if>
                <if test="name != null">
                    name=#{item.name},
                </if>
                <if test="createDate != null">
                    createDate=#{item.createDate},
                </if>
                <if test="status != null">
                    status=#{item.status},
                </if>
                <if test="description != null">
                    description=#{item.description},
                </if>
                <if test="user != null">
                    user=#{item.user},
                </if>
                <if test="actor != null">
                    actor=#{item.actor},
                </if>
                <if test="org != null">
                    org=#{item.org},
                </if>
                <if test="address != null">
                    address=#{item.address},
                </if>
                <if test="logo != null">
                    logo=#{item.logo},
                </if>
                <if test="postcode != null">
                    postcode=#{item.postcode},
                </if>
                <if test="url != null">
                    url=#{item.url},
                </if>
                <if test="introduce != null">
                    introduce=#{item.introduce},
                </if>
                <if test="charger != null">
                    charger=#{item.charger},
                </if>
            </trim>
            where id=#{item.oldId,jdbcType=VARCHAR}
        </foreach>
    </update>

    <!--单个对象删除-->
    <delete id="delete" parameterType="java.lang.String">
  delete from i_collect where id = #{id,jdbcType=VARCHAR}
    </delete>
    <!--批量删除-->
    <delete id="batchDelete" parameterType="java.util.List">
        delete from educationbase_college
        <where>
            id in
            <foreach collection="list" item="item" separator="," open="(" close=")">#{item,jdbcType=VARCHAR}</foreach>
        </where>

    </delete>
    <!--单个对象查找-->
    <select id="getMe" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        *
        from i_collect where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getcollect" parameterType="java.util.Map" resultType="java.util.Map">

        select * from i_collect where s_id=#{s_id} and u_id=#{u_id}

    </select>

    <select id="collectstorecomm" parameterType="java.util.Map" resultType="java.util.Map">

        select * from collectstoreview where s_id=#{s_id} and status='商品上架' and sstatus='已审核' and u_id=#{u_id}
        order  by time desc

    </select>

    <select id="collectPage" parameterType="java.util.Map" resultType="java.util.Map">

        select i_collect.*,i_store.storename,i_store.storeimage from i_collect left join i_store on i_collect.s_id=i_store.id where i_collect.u_id=#{u_id}  limit #{start},#{limit}

    </select>
    <select id="collectCount" parameterType="java.util.Map" resultType="java.lang.Integer">

        select count(1) from i_collect left join i_store on i_collect.s_id=i_store.id where i_collect.u_id=#{u_id}

    </select>

    <!--查找，以Map返回-->
    <select id="findForMap" parameterType="java.util.Map" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from educationbase_vw_college
        <where>
            <trim prefix="" suffixOverrides="or">
                <if test="name!=null">
                    name like '%${name}%' or
                </if>
            </trim>
        </where>
        order by name ASC

    </select>
    <!--查询，以对象集合返回-->
    <select id="find" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from educationbase_vw_college
        <where>
            <trim prefix="" suffixOverrides="or">
                <if test="name!=null">
                    name like '%${name}%' or
                </if>
            </trim>
        </where>
        order by name ASC
    </select>
    <!--返回查找条数-->
    <select id="getRowsCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) as total from educationbase_vw_college
        <where>
            <if test="name!=null">
                name like '%${name}%'
            </if>
        </where>
    </select>
    <!--分页查找-->
    <select id="findByPage" parameterType="java.util.Map" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from educationbase_vw_college
        <where>
            <if test="name!=null">
                name like '%${name}%'
            </if>
        </where>
        order by name ASC
        <if test="start !=0 or limit!=0">
            limit #{start},#{limit}
        </if>

    </select>
    <!--判断数据是否在使用中-->
    <select id="objectInUse" parameterType="java.lang.String" resultType="java.lang.Boolean">
        <![CDATA[ select count(id) from educationbase_college where name=#{id} ]]>
    </select>
</mapper>
